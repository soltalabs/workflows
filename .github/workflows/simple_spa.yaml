
name: Simple SPA Deployment

on:
  workflow_call:
    inputs:
      AWS_REGION:
        description: 'AWS Region the workflow to be deployed in'
        type: string
        default: 'us-east-1'
      AWS_DEFAULT_OUTPUT:
        description: 'Default output for AWS call'
        type: string
        default: 'json'
      PROD_APPROVERS:
        description: 'Separated comma list of github approvers'
        required: true
        type: string
      MIN_NUM_APPROVERS:
        description: 'Number of minium approvers required for PROD deployment'
        required: true
        type: number
        default: 1
      DEV_S3_SPA:
        description: 'S3 Bucket for DEV environment'
        required: true
        type: string
      DEV_CF_DISTRIBUTION_ID:
        description: 'CF Distribution ID for DEV environment'
        required: true
        type: string
      SANDBOX_S3_SPA:
        description: 'S3 Bucket for SANDBOX environment'
        required: true
        type: string
      SANDBOX_CF_DISTRIBUTION_ID:
        description: 'CF Distribution ID for SANDBOX environment'
        required: true
        type: string
      PROD_S3_SPA:
        description: 'S3 Bucket for PROD environment'
        required: true
        type: string
      PROD_CF_DISTRIBUTION_ID:
        description: 'CF Distribution ID for PROD environment'
        required: true
        type: string

    secrets:
      SHARED_ACTIONS_SSH_KEY:
        required: true
      CODEARTIFACT_AWS_ACCESS_KEY_ID:
        description: 'AWS Access Key Id for CodeArtifact package retriever'
        required: true
      CODEARTIFACT_AWS_ACCESS_KEY_SECRET:
        description: 'AWS Access Key Secret for CodeArtifact package retriever'
        required: true
      DEV_AWS_ACCESS_KEY_ID:
        description: 'AWS Access Key Id for DEV environment'
        required: true
      DEV_AWS_ACCESS_KEY_SECRET:
        description: 'AWS Access Key Secret for DEV environment'
        required: true
      SANDBOX_AWS_ACCESS_KEY_ID:
        description: 'AWS Access Key Id for SANDBOX environment'
        required: true
      SANDBOX_AWS_ACCESS_KEY_SECRET:
        description: 'AWS Access Key Secret for SANDBOX environment'
        required: true
      PROD_AWS_ACCESS_KEY_ID:
        description: 'AWS Access Key Id for PROD environment'
        required: true
      PROD_AWS_SECRET_ACCESS_KEY:
        description: 'AWS Access Key Secret for PROD environment'
        required: true
      GITHUB_PACKAGE_ACCESS_TOKEN:
        description: 'Github package access token for @soltalabs package'
        required: true
jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Checkout shared actions
        uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.SHARED_ACTIONS_SSH_KEY }}
          ref: v1.1
          repository: soltalabs/actions
          path: ./.github/actions/solta
      - name: Configure CodeArtifact packages access
        uses: ./.github/actions/solta/packages-access
        with:
          aws-access-key-id: ${{ secrets.CODEARTIFACT_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.CODEARTIFACT_AWS_ACCESS_KEY_SECRET }}
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 14
      - name: Install dependencies
        uses: ./.github/actions/solta/install-from-cache
        with:
          codeartifact-auth-token: ${{ env.CODEARTIFACT_AUTH_TOKEN }}
          node-auth-token: ${{ secrets.GITHUB_PACKAGE_ACCESS_TOKEN }}
      - uses: actions/cache@v3
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

  deploy-dev:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/cache@v3
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - name: Build
        run: |
          yarn build:dev
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_PACKAGE_ACCESS_TOKEN }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_ACCESS_KEY_SECRET }}
          aws-region: ${{ inputs.AWS_REGION }}
      - name: Deploy to S3
        run: |
          aws s3 sync build/ s3://$S3_BUCKET --delete
          aws cloudfront create-invalidation --distribution-id $CF_DISTRIBUTION_ID --path '/index.html'
        env:
          S3_BUCKET: ${{ inputs.DEV_S3_SPA }}
          CF_DISTRIBUTION_ID: ${{ inputs.DEV_CF_DISTRIBUTION_ID }}

  deploy-sandbox:
    runs-on: ubuntu-latest
    needs: deploy-dev
    steps:
      - uses: actions/cache@v3
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - name: Build
        run: |
          yarn build:sandbox
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_PACKAGE_ACCESS_TOKEN }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.SANDBOX_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SANDBOX_AWS_ACCESS_KEY_SECRET }}
          aws-region: ${{ inputs.AWS_REGION }}
      - name: Deploy to S3
        run: |
          aws s3 sync build/ s3://$S3_BUCKET --delete
          aws cloudfront create-invalidation --distribution-id $CF_DISTRIBUTION_ID --path '/index.html'
        env:
          S3_BUCKET: ${{ inputs.SANDBOX_S3_SPA }}
          CF_DISTRIBUTION_ID: ${{ inputs.SANDBOX_CF_DISTRIBUTION_ID }}

  deploy-prod:
    runs-on: ubuntu-latest
    needs: deploy-sandbox
    steps:
      - uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.token }}
          approvers: ${{ inputs.PROD_APPROVERS}}
          minimum-approvals: ${{ inputs.MIN_NUM_APPROVERS }}
          issue-title: "Deploying ${{ github.repository }} to PROD"
      - uses: actions/cache@v3
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - name: Build
        run: |
          yarn build:prod
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_PACKAGE_ACCESS_TOKEN }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PROD_AWS_ACCESS_KEY_SECRET }}
          aws-region: ${{ inputs.AWS_REGION }}
      - name: Deploy to S3
        run: |
          aws s3 sync build/ s3://$S3_BUCKET --delete
          aws cloudfront create-invalidation --distribution-id $CF_DISTRIBUTION_ID --path '/index.html'
        env:
          S3_BUCKET: ${{ inputs.SANDBOX_S3_SPA }}
          CF_DISTRIBUTION_ID: ${{ inputs.SANDBOX_CF_DISTRIBUTION_ID }}


